version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
      - backend
      - tileserv
      - geoserver

  backend:
    build: ./services/backend
    container_name: backend
    networks: 
      default:
        aliases:
          - backend
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=geoxai_db
      - POSTGRES_DB=geoxai
      - POSTGRES_USER=${POSTGRES_USER}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./services/backend:/app
      - forest_fire_data:/app/data/forest_fire_predictor
      - forest_fire_trained_model:/app/data/forest_fire_trained_model
    command: uvicorn src.main:app --reload --host 0.0.0.0 --port 5000
    
    depends_on:
      - geoxai_db

  app:
    build: 
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: app
    networks: 
      default:
        aliases:
          - app
    volumes:
      - './services/frontend:/app'
      - '/app/node_modules'
    restart: unless-stopped
  
  tileserv:
    container_name: tileserv
    image: pramsey/pg_tileserv:20231005
    #image: pramsey/pg_tileserv:latest
    env_file:
      - pg_tileserv.env
    volumes:
      - ./services/tileserv/pg_tileserv.toml:/config/pg_tileserv.toml:ro
    depends_on:
      - geoxai_db
    restart: unless-stopped
    networks:
      default:
        aliases:
          - tileserv

  geoxai_db:
    image: postgis/postgis
    container_name: geoxai_db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=geoxai_db
      - POSTGRES_DB=geoxai
      - POSTGRES_USER=${POSTGRES_USER}
    env_file:
      - .env
    volumes:
      - ./data:/work
      - geoxai_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  geoserver:
    image: kartoza/geoserver:latest
    networks: 
      default:
        aliases:
          - geoserver
    container_name: geoserver
    restart: unless-stopped
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
    environment:
      GEOSERVER_DATA_DIR=/opt/geoserver/data_dir
      GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
    env_file:
      - .env
    depends_on:
      - geoxai_db

volumes:
  geoxai_db:
  geoserver_data:
  forest_fire_data:
  forest_fire_trained_model:
